{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ForgetPassword=()=>{const[email,setEmail]=useState(\"\");const[otp,setOtp]=useState(\"\");const[newPassword,setNewPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[error,setError]=useState(\"\");const[successMessage,setSuccessMessage]=useState(\"\");const[isOtpSent,setIsOtpSent]=useState(false);const navigate=useNavigate();const handleSendOtp=async e=>{e.preventDefault();if(!email){setError(\"Please enter a valid email.\");return;}try{const response=await fetch(\"http://localhost:5000/send-otp\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email})});const data=await response.json();if(response.ok){setIsOtpSent(true);setSuccessMessage(\"OTP sent to your email.\");setError(\"\");}else{setError(data.error||\"Failed to send OTP. Please try again later.\");}}catch(err){setError(\"Error sending OTP. Please try again later.\");}};const handleVerifyOtp=async e=>{e.preventDefault();if(!otp){setError(\"Please enter the OTP.\");return;}try{const response=await fetch(\"http://localhost:5000/verify-otp\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,otp})});const data=await response.json();if(response.ok){setSuccessMessage(\"OTP verified successfully. You can now reset your password.\");setError(\"\");}else{setError(data.error||\"Failed to verify OTP. Please try again.\");}}catch(err){setError(\"Error verifying OTP. Please try again later.\");}};const handleResetPassword=async e=>{e.preventDefault();if(newPassword!==confirmPassword){setError(\"Passwords do not match.\");return;}if(!newPassword){setError(\"Please enter a new password.\");return;}try{const response=await fetch(\"http://localhost:5000/reset-password\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,newPassword})});const data=await response.json();if(response.ok){setSuccessMessage(\"Password reset successfully.\");setError(\"\");setTimeout(()=>{navigate(\"/login\");// Redirect to login after success\n},2000);}else{setError(data.error||\"Failed to reset password. Please try again.\");}}catch(err){setError(\"Error resetting password. Please try again later.\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-lg shadow-md w-96\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold text-gray-800 mb-8 text-center\",children:\"Reset Password\"}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-500 text-sm mb-4\",children:successMessage}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mb-4\",children:error}),/*#__PURE__*/_jsxs(\"form\",{children:[!isOtpSent&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),className:\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",placeholder:\"Enter your email\",required:true})]}),isOtpSent&&!newPassword&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"otp\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Enter OTP\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"otp\",value:otp,onChange:e=>setOtp(e.target.value),className:\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",placeholder:\"Enter the OTP sent to your email\",required:true})]}),isOtpSent&&otp&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newPassword\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"newPassword\",value:newPassword,onChange:e=>setNewPassword(e.target.value),className:\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",placeholder:\"Enter your new password\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),className:\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",placeholder:\"Confirm your new password\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleResetPassword,className:\"w-full bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500\",children:\"Reset Password\"})]}),!isOtpSent&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleSendOtp,className:\"w-full bg-orange-400 text-white py-2 px-4 rounded-md hover:bg-orange-500 focus:outline-none focus:ring-2 focus:ring-orange-500\",children:\"Send OTP\"}),isOtpSent&&!otp&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleVerifyOtp,className:\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\",children:\"Verify OTP\"})]})]})});};export default ForgetPassword;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ForgetPassword","email","setEmail","otp","setOtp","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","successMessage","setSuccessMessage","isOtpSent","setIsOtpSent","navigate","handleSendOtp","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err","handleVerifyOtp","handleResetPassword","setTimeout","className","children","htmlFor","type","id","value","onChange","target","placeholder","required","onClick"],"sources":["/Volumes/Shanjee/work/ADMIN/admin-dashboard/src/components/forgetpassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ForgetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSendOtp = async (e) => {\n    e.preventDefault();\n\n    if (!email) {\n      setError(\"Please enter a valid email.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5000/send-otp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setIsOtpSent(true);\n        setSuccessMessage(\"OTP sent to your email.\");\n        setError(\"\");\n      } else {\n        setError(data.error || \"Failed to send OTP. Please try again later.\");\n      }\n    } catch (err) {\n      setError(\"Error sending OTP. Please try again later.\");\n    }\n  };\n\n  const handleVerifyOtp = async (e) => {\n    e.preventDefault();\n\n    if (!otp) {\n      setError(\"Please enter the OTP.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5000/verify-otp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, otp }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage(\"OTP verified successfully. You can now reset your password.\");\n        setError(\"\");\n      } else {\n        setError(data.error || \"Failed to verify OTP. Please try again.\");\n      }\n    } catch (err) {\n      setError(\"Error verifying OTP. Please try again later.\");\n    }\n  };\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n\n    if (!newPassword) {\n      setError(\"Please enter a new password.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5000/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, newPassword }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage(\"Password reset successfully.\");\n        setError(\"\");\n        setTimeout(() => {\n          navigate(\"/login\"); // Redirect to login after success\n        }, 2000);\n      } else {\n        setError(data.error || \"Failed to reset password. Please try again.\");\n      }\n    } catch (err) {\n      setError(\"Error resetting password. Please try again later.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-96\">\n        <h2 className=\"text-3xl font-bold text-gray-800 mb-8 text-center\">Reset Password</h2>\n\n        {/* Success Message */}\n        {successMessage && <p className=\"text-green-500 text-sm mb-4\">{successMessage}</p>}\n\n        {/* Error Message */}\n        {error && <p className=\"text-red-500 text-sm mb-4\">{error}</p>}\n\n        {/* Forgot Password Form */}\n        <form>\n          {/* Email Input */}\n          {!isOtpSent && (\n            <div className=\"mb-6\">\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter your email\"\n                required\n              />\n            </div>\n          )}\n\n          {/* OTP Input */}\n          {isOtpSent && !newPassword && (\n            <div className=\"mb-6\">\n              <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Enter OTP\n              </label>\n              <input\n                type=\"text\"\n                id=\"otp\"\n                value={otp}\n                onChange={(e) => setOtp(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter the OTP sent to your email\"\n                required\n              />\n            </div>\n          )}\n\n          {/* New Password Fields */}\n          {isOtpSent && otp && (\n            <>\n              <div className=\"mb-6\">\n                <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  New Password\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"newPassword\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Enter your new password\"\n                  required\n                />\n              </div>\n\n              <div className=\"mb-6\">\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Confirm Password\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Confirm your new password\"\n                  required\n                />\n              </div>\n\n              <button\n                type=\"button\"\n                onClick={handleResetPassword}\n                className=\"w-full bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500\"\n              >\n                Reset Password\n              </button>\n            </>\n          )}\n\n          {/* Send OTP Button */}\n          {!isOtpSent && (\n            <button\n              type=\"button\"\n              onClick={handleSendOtp}\n              className=\"w-full bg-orange-400 text-white py-2 px-4 rounded-md hover:bg-orange-500 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n            >\n              Send OTP\n            </button>\n          )}\n\n          {/* Verify OTP Button */}\n          {isOtpSent && !otp && (\n            <button\n              type=\"button\"\n              onClick={handleVerifyOtp}\n              className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              Verify OTP\n            </button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}